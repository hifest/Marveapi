{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["Error","src","img","style","display","width","height","objectFit","margin","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharactres","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","descr","description","slice","homepage","urls","thumbnail","path","extension","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","styleImg","className","alt","href","RandomChar","props","setChar","useEffect","randomChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","charList","setCharList","newItem","setNewItem","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","onFocusItem","current","forEach","element","classList","remove","add","focus","arr","item","i","imgStyle","ref","el","onCharSelected","onKeyPress","e","key","renderItems","ErrorMessage","Skeleton","allComics","allUrl","push","resourceURI","n","lastIndexOf","substring","console","log","to","CharInfo","updateChar","charId","skeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","MainPage","selectChar","decoration"],"mappings":"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","file":"static/js/4.54fc64b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst Error =  () =>{\r\n    return(\r\n        <img src={img}  style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}></img>\r\n    )\r\n}\r\nexport default Error;"," import {useHttp} from '../hooks/http.hook'\r\n\r\nconst  useMarvelService = () => {\r\n\r\n   const {loading,error,clearError,request} = useHttp();\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    const _apiKey = 'apikey=0803ac54e9aa8cbbe036f1c7b3b3d1c0'\r\n    const _baseOffset = 210;\r\n\r\n\r\n     const getAllCharactres = async (offset = _baseOffset) =>{\r\n      const res =  await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_transformCharacter)\r\n     }\r\n\r\n     const getCharacter = async (id) =>{\r\n       const res =  await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n       return _transformCharacter(res.data.results[0])\r\n    }\r\n    const getAllComics = async (offset = _baseOffset) =>{\r\n      const res  = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_transformComics)\r\n    };\r\n    const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n      return _transformComics(res.data.results[0]);\r\n  }\r\n    const _transformCharacter = (char) =>{\r\n      return {\r\n         id: char.id,\r\n         name: char.name,\r\n         descr: char.description ? char.description.slice(0,220) + '...': 'description not found',\r\n         homepage: char.urls[0].url,\r\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n         wiki: char.urls[1].url,\r\n         comics:  char.comics.items ? char.comics.items.slice(0,9) : 'comics not found'\r\n      }\r\n    }\r\n    const _transformComics = (comics) =>{\r\n         return {\r\n            id: comics.id,\r\n            title:comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices[0].price ?  comics.prices[0].price : 'not pricing',\r\n            url:comics.urls[0].url\r\n         }\r\n   };\r\n    return {\r\n       loading,error,getAllCharactres,getCharacter,clearError,getAllComics,getComic\r\n    }\r\n }\r\n\r\n export default useMarvelService;","import {useState,useCallback} from 'react'\r\n\r\nexport const useHttp = () =>{\r\n    const [loading,setLoading] = useState(false)\r\n    const [error,setError] = useState(null)\r\n   \r\n    const request = useCallback(async (url,method = 'GET',body = null,headers = {'Content-Type': 'application/json'}) =>{\r\n\r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url,{method,body,headers});\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return(data);\r\n        }\r\n        catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n             \r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(()=>{\r\n        setError(null)\r\n    },[])\r\n    return {loading,error,clearError,request}\r\n};","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Error from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner'\nimport { useState,useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\n\nconst  RandomChar = (props) => {\nconst [char,setChar] = useState({});\n\nuseEffect(()=>{\n    randomChar()\n},[]);\n\n    const {loading,error,getCharacter,clearError} =  useMarvelService()\n\n    const onCharLoaded = (char) =>{\n        setChar(char)\n    }\n    const randomChar = () => {\n        clearError()\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n            getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n    const newRandomChar = () =>{\n        randomChar()\n   \n    }\n        const errorMessage = error ? <Error/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={newRandomChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n\n\nconst View = ({char}) => {\n    const {name,descr,thumbnail,homepage,wiki} = char\n    let styleImg = {'objectFit' : 'cover'}\n    if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        styleImg = {'objectFit' : 'contain'}\n    }\n    return(\n        <div className=\"randomchar__block\">\n        <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={styleImg}/>\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n               {descr}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a href={homepage} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">Wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default RandomChar;","import React,{useState,useEffect,useRef} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport PropTypes from 'prop-types';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList,setCharList] = useState([])\n    const [newItem,setNewItem] = useState(false)\n    const [offset,setOffset] = useState(250)\n    const [charEnded,setCharEnded] = useState(false)\n\n    const {loading,error,getAllCharactres} =  useMarvelService();\n\n    useEffect(()=>{\n        onRequest(offset, true);\n    },[]);\n\n    const onRequest = (offset,initial) =>{\n        initial ? setNewItem(false) : setNewItem(true)\n        getAllCharactres(offset)\n        .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9){\n            ended = true\n        }\n\n        setCharList(charList => [...charList,...newCharList]);\n        setNewItem(newItem => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended)\n\n    }\n\n  const itemRefs =  useRef([]);\n\n\n\n    const onFocusItem = (id) =>{\n\n        itemRefs.current.forEach(element => {\n            element.classList.remove('char__item_selected')\n        });\n\n        itemRefs.current[id].classList.add('char__item_selected')\n        itemRefs.current[id].focus()\n    }\n//try\n    function renderItems(arr) {\n        const items =  arr.map((item,i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    ref = {el => itemRefs.current[i] = el}\n                    onClick={()=>{ \n                        props.onCharSelected(item.id)\n                        onFocusItem(i)\n                    }} \n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            onFocusItem(i);\n                        }\n                    }}>\n                    \n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                \n                {items}\n            </ul>\n        )\n    }\n\n        \n        const items = renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading && !newItem ? <Spinner/> : null;\n        // const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n                <button \n                className=\"button button__main button__long\"\n                // disabled={newItemLoading}\n                style = {{'display' : charEnded ? 'none' : 'block'}}\n                onClick ={()=>onRequest(offset)}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n\nCharList.propTypes = {\n    onCharSelected:PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport Error from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner'\nimport React,{useState,useEffect} from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton'\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\n\nconst  CharInfo = (props) => {\n    const [char,setChar] = useState(null);\n    const [comics,setComics] = useState(null);\n\n    const {loading,error,getCharacter,clearError} =  useMarvelService()\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () =>{\n        const {charId} = props;\n        if(!charId){\n            return;\n        }\n        clearError()\n        getCharacter(charId)\n        .then(onCharLoaded)\n        // this.foo.bar = 0\n    }\n    // fN5mmdMf\n    const onCharLoaded = (char) =>{\n        setChar(char);\n    }\n\n\n\n        const skeleton = loading || error || char ? null : <Skeleton></Skeleton> ;\n        const errorMessage = error ? <Error/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n        return (\n            <div className=\"char__info\">\n                {errorMessage}\n                {spinner}\n                {content}\n                {skeleton}\n            </div>\n        )\n}\nconst View = ({char}) =>{\n    const {name,descr,thumbnail,homepage,wiki,comics} = char;\n    let styleImg = {'objectFit' : 'cover'}\n    if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        styleImg = {'objectFit' : 'contain'}\n    }\n    // console.log(comics)\n    const allComics = comics.map((item,i )=>{\n        let allUrl = []\n        allUrl.push(item.resourceURI)\n       let url = allUrl.map(item => {\n            let n = item.lastIndexOf('/');\n            let result = item.substring(n + 1);\n            return +result\n    });\n    console.log(url)\n        return (\n        <li className=\"char__comics-item\" key={i}>\n            <Link to={`/comics/${url}`}>\n            {item.name}\n            </Link>\n        </li>\n        )\n    })\n    return (\n        <>\n        <div className=\"char__basics\">\n                    <img src={thumbnail} alt=\"abyss\" style={styleImg}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {descr}\n                </div>\n                <div className=\"char__comics\">Comics:\n                </div>\n                <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {allComics}\n                </ul>\n        </>\n    )\n}\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\nexport default CharInfo;","import { Component } from \"react\";\r\nimport Error from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error:false\r\n    }\r\n    componentDidCatch(error,errorInfo){\r\n        console.log(error,errorInfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.error){\r\n            return <Error></Error>\r\n        }\r\n        return  this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from '../../resources/img/vision.png';\r\nimport {useState} from 'react';\r\n\r\nconst MainPage = () =>{\r\n    const [selectChar,setChar] = useState(null)\r\n\r\n    const onCharCelected = (id) =>{\r\n        setChar(id);\r\n    };\r\n    return (\r\n        <>\r\n        <ErrorBoundary>\r\n            <RandomChar/>\r\n        </ErrorBoundary>\r\n\r\n        <div className=\"char__content\">\r\n\r\n        <ErrorBoundary>\r\n            <CharList onCharSelected={onCharCelected} />\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n            <CharInfo charId = {selectChar} />\r\n        </ErrorBoundary>\r\n\r\n        </div>\r\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n};\r\nexport default MainPage"],"sourceRoot":""}